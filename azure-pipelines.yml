# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
# Prepare Analysis Configuration task
- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'VF SonarQube'
    scannerMode: CLI
    configMode: manual
    cliProjectKey: 'repo_test_01'
    cliProjectName: 'repo_test_01'
    cliSources: ../
    extraProperties: |
     # Additional properties that will be passed to the scanner, 
     # Put one key=value per line, example:
     sonar.java.binaries=./
     sonar.exclusions=**/*.bin
     
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'



# Run Code Analysis v5
# Run scanner and upload the results to the SonarQube server.
- task: SonarQubeAnalyze@5
  displayName: 'Run Code Analysis'

